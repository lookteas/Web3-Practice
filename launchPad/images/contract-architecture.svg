<svg width="1400" height="900" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 28px; font-weight: bold; fill: #2c3e50; }
      .subtitle { font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; fill: #34495e; }
      .text { font-family: Arial, sans-serif; font-size: 13px; fill: #2c3e50; }
      .small-text { font-family: Arial, sans-serif; font-size: 14px; font-weight: bold; fill: #e00e0eff; }
      .interface-text { font-family: Arial, sans-serif; font-size: 12px; fill: #fafafaff; font-style: italic; }
      
      .factory-box { fill: #e74c3c; stroke: #c0392b; stroke-width: 3; rx: 12; }
      .token-box { fill: #f39c12; stroke: #e67e22; stroke-width: 3; rx: 12; }
      .interface-box { fill: #9b59b6; stroke: #8e44ad; stroke-width: 2; rx: 8; }
      .external-box { fill: #3498db; stroke: #2980b9; stroke-width: 2; rx: 8; }
      .library-box { fill: #2ecc71; stroke: #27ae60; stroke-width: 2; rx: 8; }
      
      .arrow { stroke: #2c3e50; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .dashed-arrow { stroke: #7f8c8d; stroke-width: 2; fill: none; stroke-dasharray: 5,5; marker-end: url(#arrowhead-gray); }
      .inheritance-arrow { stroke: #e74c3c; stroke-width: 3; fill: none; marker-end: url(#arrowhead-red); }
      
      .white-text { fill: white; font-weight: bold; }
      .function-text { font-family: 'Courier New', monospace; font-size: 11px; fill: #2c3e50; }
    </style>
    
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#2c3e50" />
    </marker>
    <marker id="arrowhead-gray" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#7f8c8d" />
    </marker>
    <marker id="arrowhead-red" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#e74c3c" />
    </marker>
  </defs>
  
  <!-- 标题 -->
  <text x="70" y="40" text-anchor="middle" class="title">MemeToken LaunchPad 合约架构图</text>
  
  <!-- 核心合约层 -->
  <text x="50" y="90" class="subtitle">核心合约层</text>
  
  <!-- MemeFactory 合约 -->
  <rect x="50" y="110" width="300" height="200" class="factory-box"/>
  <text x="200" y="135" text-anchor="middle" class="white-text" font-size="16">MemeFactory</text>
  <text x="200" y="155" text-anchor="middle" class="white-text">主工厂合约</text>
  
  <!-- 主要函数 -->
  <text x="60" y="180" class="white-text">主要函数:</text>
  <text x="60" y="195" class="function-text" fill="white">• deployMeme()</text>
  <text x="60" y="210" class="function-text" fill="white">• mintMeme()</text>
  <text x="60" y="225" class="function-text" fill="white">• batchMintMeme()</text>
  <text x="60" y="240" class="function-text" fill="white">• buyMeme()</text>
  <text x="60" y="255" class="function-text" fill="white">• getTokenInfo()</text>
  
  <!-- 状态变量 -->
  <text x="180" y="180" class="white-text">状态变量:</text>
  <text x="180" y="195" class="function-text" fill="white">• implementation</text>
  <text x="180" y="210" class="function-text" fill="white">• deployedTokens[]</text>
  <text x="180" y="225" class="function-text" fill="white">• symbolToToken</text>
  <text x="180" y="240" class="function-text" fill="white">• tokenToPrice</text>
  <text x="180" y="255" class="function-text" fill="white">• fees</text>
  
  <!-- MemeToken 实现合约 -->
  <rect x="450" y="110" width="280" height="200" class="token-box"/>
  <text x="590" y="135" text-anchor="middle" class="white-text" font-size="16">MemeToken</text>
  <text x="590" y="155" text-anchor="middle" class="white-text">代币实现合约</text>
  
  <!-- 主要函数 -->
  <text x="460" y="180" class="white-text">主要函数:</text>
  <text x="460" y="195" class="function-text" fill="white">• initialize()</text>
  <text x="460" y="210" class="function-text" fill="white">• mint()</text>
  <text x="460" y="225" class="function-text" fill="white">• canMint()</text>
  <text x="460" y="240" class="function-text" fill="white">• perMint()</text>
  <text x="460" y="255" class="function-text" fill="white">• totalSupplyLimit()</text>
  
  <!-- 状态变量 -->
  <text x="590" y="180" class="white-text">状态变量:</text>
  <text x="590" y="195" class="function-text" fill="white">• totalSupplyLimit</text>
  <text x="590" y="210" class="function-text" fill="white">• perMint</text>
  <text x="590" y="225" class="function-text" fill="white">• mintedAmount</text>
  <text x="590" y="240" class="function-text" fill="white">• factory</text>
  <text x="590" y="255" class="function-text" fill="white">• mintedByAddress</text>
  
  <!-- 克隆关系 -->
  <line x1="350" y1="220" x2="450" y2="220" class="arrow"/>
  <text x="405" y="210" text-anchor="middle" class="small-text">EIP-1167</text>
  <text x="405" y="240" text-anchor="middle" class="small-text">克隆</text>
  
  <!-- 继承层 -->
  <text x="800" y="130" class="subtitle">继承 &amp; 接口层</text>
  
  <!-- OpenZeppelin 合约 -->
  <rect x="800" y="150" width="170" height="90" class="library-box"/>
  <text x="875" y="175" text-anchor="middle" class="white-text">OpenZeppelin</text>
  <text x="800" y="195" class="white-text">• Ownable</text>
  <text x="800" y="215" class="white-text">• ReentrancyGuard</text>
  <text x="800" y="235" class="white-text">• ERC20</text>
  
  <!-- 继承箭头 -->
  <line x1="800" y1="160" x2="350" y2="160" class="inheritance-arrow"/>
  <text x="770" y="155" text-anchor="middle" class="small-text">继承</text>
  
  <line x1="800" y1="220" x2="730" y2="250" class="inheritance-arrow"/>
  
  <!-- Clones 库 -->
  <rect x="800" y="250" width="120" height="60" class="library-box"/>
  <text x="860" y="275" text-anchor="middle" class="white-text">Clones</text>
  <text x="860" y="295" text-anchor="middle" class="white-text">EIP-1167</text>
  
  <!-- 使用关系 -->
  <line x1="800" y1="280" x2="350" y2="280" class="dashed-arrow"/>
  <text x="770" y="275" text-anchor="middle" class="small-text">使用</text>
  
  <!-- 外部协议层 -->
  <text x="50" y="370" class="subtitle">外部协议集成</text>
  
  <!-- Uniswap V3 -->
  <rect x="50" y="390" width="200" height="120" class="external-box"/>
  <text x="150" y="415" text-anchor="middle" class="white-text" font-size="16">Uniswap V3</text>
  <text x="60" y="440" class="white-text">接口:</text>
  <text x="60" y="455" class="interface-text" fill="white">• ISwapRouter</text>
  <text x="60" y="470" class="interface-text" fill="white">• INonfungiblePositionManager</text>
  <text x="60" y="485" class="interface-text" fill="white">• IUniswapV3Pool</text>
  
  <!-- WETH -->
  <rect x="280" y="390" width="120" height="80" class="external-box"/>
  <text x="340" y="415" text-anchor="middle" class="white-text">WETH</text>
  <text x="340" y="435" text-anchor="middle" class="white-text">包装以太坊</text>
  <text x="340" y="455" text-anchor="middle" class="white-text">ERC20 代币</text>
  
  <!-- 集成箭头 -->
  <line x1="150" y1="390" x2="200" y2="320" class="dashed-arrow"/>
  <text x="195" y="365" text-anchor="middle" class="small-text">流动性</text>
  <text x="195" y="380" text-anchor="middle" class="small-text">&amp; 交易</text>
  
  <line x1="340" y1="390" x2="280" y2="320" class="dashed-arrow"/>
  
  <!-- 数据流层 -->
  <text x="500" y="370" class="subtitle">数据流 &amp; 事件</text>
  
  <!-- 事件系统 -->
  <rect x="500" y="390" width="250" height="120" class="interface-box"/>
  <text x="625" y="415" text-anchor="middle" class="white-text" font-size="16">事件系统</text>
  <text x="510" y="440" class="white-text">Factory 事件:</text>
  <text x="510" y="455" class="interface-text" fill="white">• TokenDeployed</text>
  <text x="510" y="470" class="interface-text" fill="white">• TokenMinted</text>
  <text x="510" y="485" class="interface-text" fill="white">• FeesUpdated</text>
  
  <text x="630" y="440" class="white-text">Token 事件:</text>
  <text x="630" y="455" class="interface-text" fill="white">• Transfer</text>
  <text x="630" y="470" class="interface-text" fill="white">• Approval</text>
  
  <!-- 存储层 -->
  <text x="800" y="370" class="subtitle">存储 &amp; 映射</text>
  
  <rect x="800" y="390" width="220" height="120" class="interface-box"/>
  <text x="910" y="415" text-anchor="middle" class="white-text" font-size="16">存储映射</text>
  <text x="810" y="440" class="white-text">Factory 存储:</text>
  <text x="810" y="455" class="interface-text" fill="white">• symbolToToken</text>
  <text x="810" y="470" class="interface-text" fill="white">• tokenToDeployer</text>
  <text x="810" y="485" class="interface-text" fill="white">• tokenToPrice</text>
  
  <!-- 安全机制层 -->
  <text x="50" y="560" class="subtitle">安全机制</text>
  
  <!-- 重入保护 -->
  <rect x="50" y="580" width="180" height="100" class="library-box"/>
  <text x="140" y="605" text-anchor="middle" class="white-text">重入保护</text>
  <text x="60" y="625" class="white-text">• nonReentrant</text>
  <text x="60" y="640" class="white-text">• 状态锁定</text>
  <text x="60" y="655" class="white-text">• 调用保护</text>
  
  <!-- 权限控制 -->
  <rect x="250" y="580" width="180" height="100" class="library-box"/>
  <text x="340" y="605" text-anchor="middle" class="white-text">权限控制</text>
  <text x="260" y="625" class="white-text">• onlyOwner</text>
  <text x="260" y="640" class="white-text">• 管理员权限</text>
  <text x="260" y="655" class="white-text">• 费用管理</text>
  
  <!-- 参数验证 -->
  <rect x="450" y="580" width="180" height="100" class="library-box"/>
  <text x="540" y="605" text-anchor="middle" class="white-text">参数验证</text>
  <text x="460" y="625" class="white-text">• require 检查</text>
  <text x="460" y="640" class="white-text">• 边界验证</text>
  <text x="460" y="655" class="white-text">• 状态检查</text>
  
  <!-- 铸造限制 -->
  <rect x="650" y="580" width="180" height="100" class="library-box"/>
  <text x="740" y="605" text-anchor="middle" class="white-text">铸造限制</text>
  <text x="660" y="625" class="white-text">• 每地址限制</text>
  <text x="660" y="640" class="white-text">• 总量限制</text>
  <text x="660" y="655" class="white-text">• canMint 检查</text>
  
  <!-- 费用机制 -->
  <text x="900" y="560" class="subtitle">费用机制</text>
  
  <rect x="900" y="580" width="200" height="100" class="interface-box"/>
  <text x="1000" y="605" text-anchor="middle" class="white-text">费用分配</text>
  <text x="910" y="625" class="white-text">部署者: 95%</text>
  <text x="910" y="640" class="white-text">项目方: 5%</text>
  <text x="910" y="655" class="white-text">自动流动性添加</text>
  
  <!-- 工作流程箭头 -->
  <text x="50" y="730" class="subtitle">核心工作流程</text>
  
  <!-- 部署流程 -->
  <rect x="50" y="750" width="120" height="40" class="factory-box"/>
  <text x="110" y="775" text-anchor="middle" class="white-text">1. 部署</text>
  
  <line x1="170" y1="770" x2="210" y2="770" class="arrow"/>
  
  <rect x="210" y="750" width="120" height="40" class="token-box"/>
  <text x="270" y="775" text-anchor="middle" class="white-text">2. 克隆</text>
  
  <line x1="330" y1="770" x2="370" y2="770" class="arrow"/>
  
  <rect x="370" y="750" width="120" height="40" class="library-box"/>
  <text x="430" y="775" text-anchor="middle" class="white-text">3. 初始化</text>
  
  <line x1="490" y1="770" x2="530" y2="770" class="arrow"/>
  
  <rect x="530" y="750" width="120" height="40" class="external-box"/>
  <text x="590" y="775" text-anchor="middle" class="white-text">4. 铸造</text>
  
  <line x1="650" y1="770" x2="690" y2="770" class="arrow"/>
  
  <rect x="690" y="750" width="120" height="40" class="interface-box"/>
  <text x="750" y="775" text-anchor="middle" class="white-text">5. 交易</text>
  
  <!-- 底部说明 -->
  <text x="700" y="850" text-anchor="middle" class="small-text">此架构图展示了 MemeToken LaunchPad 的完整合约架构，包括核心合约、继承关系、外部集成和安全机制</text>
</svg>